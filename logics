create GHA - code for below code snippet: 

def getReleaseName(String branch, String buildNumber) {
  def specificBranch = "${branch}".tokenize('/').last();
  return specificBranch.indexOf('-') > 0
  ? "${specificBranch.substring(0, specificBranch.indexOf('-') + 0)}-${buildNumber}-${specificBranch.substring(specificBranch.indexOf('-') + 1, specificBranch.size())}"
  : "${specificBranch}-${buildNumber}";

GHA steps for linux Runner :
---------------------------
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set Release Name
        id: release_name
        run: |
          BRANCH_NAME="${{ github.ref_name }}"  # Extract branch name from GitHub context
          BUILD_NUMBER="${{ github.run_number }}"  # Use GitHub run number as build number

          SPECIFIC_BRANCH=$(echo "$BRANCH_NAME" | awk -F'/' '{print $NF}')  # Get the last part of the branch name

          if [[ "$SPECIFIC_BRANCH" == *"-"* ]]; then
            PREFIX=$(echo "$SPECIFIC_BRANCH" | cut -d'-' -f1)
            SUFFIX=$(echo "$SPECIFIC_BRANCH" | cut -d'-' -f2-)
            RELEASE_NAME="${PREFIX}-${BUILD_NUMBER}-${SUFFIX}"
          else
            RELEASE_NAME="${SPECIFIC_BRANCH}-${BUILD_NUMBER}"
          fi

          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
        shell: bash

      - name: Print Release Name
        run: echo "Generated Release Name: $RELEASE_NAME"

GHA steps for windows runner:
-----------------------------
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Set Release Name
        id: release_name
        shell: pwsh
        run: |
          $branchName = "${{ github.ref_name }}"  # Extract branch name
          $buildNumber = "${{ github.run_number }}"  # Extract build number

          # Get the last part of the branch name after the last '/'
          $specificBranch = ($branchName -split '/')[-1]

          if ($specificBranch -match "-") {
            $prefix = $specificBranch.Split("-")[0]
            $suffix = $specificBranch.Substring($specificBranch.IndexOf("-") + 1)
            $releaseName = "$prefix-$buildNumber-$suffix"
          } else {
            $releaseName = "$specificBranch-$buildNumber"
          }

          echo "RELEASE_NAME=$releaseName" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Print Release Name
        shell: pwsh
        run: echo "Generated Release Name: $env:RELEASE_NAME"
