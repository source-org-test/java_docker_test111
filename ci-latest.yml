name: Docker CI Anu

on:
  workflow_dispatch:
    inputs:
      docker_package_version:
        description: Version of Dockerfile
        default: '0.1.0'
        required: false
        type: string

permissions:
  contents: read
  packages: write
  id-token: write

env:
  BASE_TAG: ${{ github.event.inputs.base_tag || 'latest' }}
  QUAY: 'registry.cigna.com/cognizant'
  REGISTRY: ghcr.io 
  test1: https://ghes.company.com/repo1
  test2: https://newgithub.com/repo1
  test3: https://ghes.company.com/repo1
  
jobs:
  setup:
    runs-on: Windows-Runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 

      - name: Remove existing build directories
        run: |
          Remove-Item -Path "./build/bin" -Recurse -Force -ErrorAction SilentlyContinue
          Remove-Item -Path "./build/nupkg" -Recurse -Force -ErrorAction SilentlyContinue
        shell: pwsh

      - name: Create build directories
        run: |
          New-Item -Path "./build/nupkg" -ItemType "directory" -Force
          New-Item -Path "./build/bin" -ItemType "directory" -Force
        shell: pwsh
      - name: Gather Manifests
        run: |
          $baseImagePath ="$env:BASE_IMAGE"
          $files = Get-ChildItem -Path "$baseImagePath" -Recurse -File -Include *manifest.json*
           $content = @()
           foreach ($file in $files) {
             $content += Get-Content -Raw -Path $file | ConvertFrom-Json
           }
           Write-Output $content
           $content | ConvertTo-Json -Depth 10 | Out-File -FilePath './fajob/manifest.json' -NoNewline -Force
    
        shell: pwsh

      - name: fetch nuget packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        shell: pwsh
        run: |
          
          $token = $PACKAGE_TOKEN
          $packages = Get-Content -Path './fajob/manifest.json' | ConvertFrom-Json
          echo $packages
          #Set-PSDebug -Trace 1
          foreach ($package in $packages.PSObject.Properties) {
            $name = $package.Name
            $version = $package.Value.version
            $build = $package.Value.build
            $nugetUrl = "https://nuget.pkg.github.com/zilvertonz/index.json"
            $headers = @{
            "Authorization" = "Bearer $token"
            "Accept" = "application/vnd.github.v3+json"
            }
            Invoke-WebRequest -Uri $nugetUrl -Headers $headers -OutFile "./build/nupkg/$name.zip"
            #Invoke-WebRequest -Uri $nugetUrl -OutFile "./build/nupkg/$name.zip"
            Expand-Archive -Path "./build/nupkg/$name.zip" -DestinationPath "./build/nupkg/$name" -Force
            
           Get-ChildItem -Path "./build/nupkg/$name" -Filter *.dll -Recurse | Move-Item -Destination "./build/bin/$name" -Force
           Get-ChildItem -Path "./build/nupkg/$name" -Filter *.deps.json -Recurse | Move-Item -Destination "./build/bin/$name" -Force
           Get-ChildItem -Path "./build/nupkg/$name" -Filter *.pdb -Recurse | Move-Item -Destination "./build/bin/$name" -Force
           }

  # build-docker:
  #   runs-on: ubuntu-latest
  #   needs: fetch-packages
  #   steps:
  #     - name: Set up Docker
  #       run: echo "Docker setup completed"
      
  #     - name: Build Docker Image
  #       uses: "zilvertonz/usmg-gdem-ghactions-workflows/.github/workflows/ci.yml@v1"
  #       with:
  #         project-type: "docker"
  #         docker_package_version: "${{ github.event.inputs.docker_package_version }}"
  #         dockerfile_path: "DOCKER"
  #         docker_image_name: "RepoName"
